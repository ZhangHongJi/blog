<h1>callback and bind</h1>

<h2>文档</h2>

<p>base/callback.h中注释</p>

<h2>作用</h2>

<p>参数传递与函数调用分离，可异步调用
task包装callback通过message传递给另一线程执行</p>

<h2>功能</h2>

<p>callback本质上是对函数指针的封装，bind是把成员函数，函数等转化成callback对象。</p>

<h2>关键对象</h2>

<p>BindState&lt;&gt;由bind创建，callback保持。</p>

<h2>产生</h2>

<p>bind系列和callback系列都是由pump.py通过xxx.x.pump生成的。</p>

<h2>限制</h2>

<p>bind最多支持7个参数的函数转换。
类成员函数指针</p>

<pre data-language="csharp">
#include <stdio.h>
class C;
class C {
public:
    void print(int x) {
        printf("%d\n", x);
    };
    int add(int x, int y) {
        return (x + y);
    };
};
int
main(int argc, char* argv[])
{
    C c;
    C* pc = new C();
    int (C::*add)(int,int);
    typedef void (C::*PF)(int);
    PF print = &C::print;
    add = 0;
    add = &C::add;
    int i = (c.*add)(5,6);
    (pc->*print)(i);
    return 0;
}

</pre>

#html